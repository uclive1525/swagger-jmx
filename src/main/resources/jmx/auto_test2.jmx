<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments">主数据相关接口文档</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>

	<!--线程组开始-->
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1603853091000</longProp>
        <longProp name="ThreadGroup.end_time">1603853091000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
	  
	  <hashTree>
	    <!--网关环境开始-->
		<Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="网关环境" enabled="true">
		  <collectionProp name="Arguments.arguments">
			<elementProp name="host" elementType="Argument">
			  <stringProp name="Argument.name">host</stringProp>
			  <stringProp name="Argument.metadata">=</stringProp>
			  <stringProp name="Argument.value">47.97.154.153</stringProp>
			</elementProp>

			<elementProp name="port" elementType="Argument">
              <stringProp name="Argument.name">port</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">8201</stringProp>

            </elementProp>

		  </collectionProp>
		</Arguments>
		<hashTree/>
		
		<!--请求头开始-->
		<HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
		  <collectionProp name="HeaderManager.headers">
			<elementProp name="" elementType="Header">
			  <stringProp name="Header.name">Content-Type</stringProp>
			  <stringProp name="Header.value">application/json</stringProp>
			</elementProp>
		  </collectionProp>
		</HeaderManager>
		<hashTree/>
		<!--HTTP请求默认值-->
		<ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
		
		<!--自定义变量开始-->
		<Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">

            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_7.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_7.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.agenUser</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.agentName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.agentNumber</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.agentTel</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.agentType</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.agentUser</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.dockingPeople</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET.status</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">saveAgentUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updateAgentByKeyUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteExpressBYKeyUsingDELETE_7.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteExpressBYKeyUsingDELETE_7.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_1.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_1.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">saveExpressUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updateExpressByKeyUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_15.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_15.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findAoglinkageUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findAoglinkageUsingGET.level</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">level</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findAoglinkageUsingGET.value</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">value</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.itemsBrand</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.itemsName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.itemsParent1</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.itemsParent2</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.itemsParent3</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.itemsStatus</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_2.supplierId</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">saveAgentUsingPOST_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updateAgentByKeyUsingPOST_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_23.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_23.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_7.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_7.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_7.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">saveAgentUsingPOST_2.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updateAgentByKeyUsingPOST_2.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_31.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteAgentBYKeyUsingDELETE_31.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">selectDetailUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">selectDetailUsingGET.supplierCode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">供应商编号</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">selectDetailUsingGET.supplierName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">供应商姓名</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.dockingUserId</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.supplierCode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.supplierName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.supplierStatus</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.supplierTel</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.supplierType</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_8.supplierUsername</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">saveAgentUsingPOST_3.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updateAgentByKeyUsingPOST_3.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteDepotBYKeyUsingDELETE_7.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteDepotBYKeyUsingDELETE_7.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_9.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_9.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_9.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_9.warehouseDeptId</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">warehouseDeptId</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_9.warehouseName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">warehouseName</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_9.warehouseStatusus</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">warehouseStatusus</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">saveAgentUsingPOST_4.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updateAgentByKeyUsingPOST_4.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteExpressBYKeyUsingDELETE_15.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deleteExpressBYKeyUsingDELETE_15.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_5.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_5.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_5.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">saveExpressUsingPOST_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updateExpressByKeyUsingPOST_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findAogdetailUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findAogdetailUsingGET.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_3.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_3.aogNumber</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">到货单编号</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_3.aogTime</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">到货时间</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_3.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_3.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">ordersUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">addUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">correlationByKeyUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">correlationUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">correlationUsingGET.itemName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">itemName</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deletePurDetailBYKeyUsingDELETE_7.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deletePurDetailBYKeyUsingDELETE_7.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deletePurOrdersBYKeyUsingDELETE_7.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deletePurOrdersBYKeyUsingDELETE_7.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPagedetailUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPagedetailUsingGET.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.applicationTime</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">申请日期</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.buyerTel</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">采购联系电话</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.buyerUser</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">采购人</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.consigneeAddress</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">收货详细地址</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.itemName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">物品名称</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.parent1</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">一级类目</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.parent2</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">二级类目</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.parent3</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">三级类目</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.purchaseCode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">采购编号</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.purchaseStatus</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">采购状态</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.purchaseType</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">采购类型</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_4.suppliercode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">供应商名称</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">addUsingPOST_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updatePurByKeyUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deletePurOrdersBYKeyUsingDELETE_15.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">deletePurOrdersBYKeyUsingDELETE_15.id</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">id</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_6.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_6.pageNum</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前页码</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_6.pageSize</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">每页数量</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_6.planCode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">采购计划编号</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_6.planYear</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">计划年度</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">findPageUsingGET_6.purType</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">采购计划类型</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">inBoundByItemsUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">updatePurPlanByKeyUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">generatedUsingGET.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">addUsingPOST_2.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">inBoundByBooksUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">inBoundByItemsUsingPOST_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">purchaseAddUsingPOST.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">inBoundByBooksUsingPOST_1.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
            <elementProp name="vin" elementType="Argument">
              <stringProp name="Argument.name">inBoundByItemsUsingPOST_2.Authorization</stringProp>
              <stringProp name="Argument.value">Bearer </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">swagger</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
		
		<!--服务逻辑控制器-->
		<GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="主数据系统" enabled="true" />
        <!--需要循环遍历controller，每个controller生成一个控制器-->
		<hashTree>
		  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="进销存-库存管理" enabled="true">
            <stringProp name="TestPlan.comments"></stringProp>
		  </GenericController>
		  <hashTree>
		     <!--遍历请求接口-->
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="入库单管理-图书入库" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "inboundTime" : "inboundTime",
  "inboundPrice" : 5.637376656633329,
  "inboundCode" : "inboundCode",
  "depotCode" : "depotCode",
  "description" : "description",
  "inboundStatus" : "inboundStatus",
  "inboundType" : "inboundType",
  "supplierCode" : "supplierCode",
  "inboundAmount" : 5,
  "inboundUser" : "inboundUser",
  "child" : [ {
    "itemYear" : "itemYear",
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "itemYear" : "itemYear",
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ]
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/warehouse/inbound/books/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">inBoundByBooksUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${inBoundByBooksUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="入库单管理-办公物品入库" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "inboundTime" : "inboundTime",
  "inboundPrice" : 5.637376656633329,
  "inboundCode" : "inboundCode",
  "depotCode" : "depotCode",
  "description" : "description",
  "inboundStatus" : "inboundStatus",
  "inboundType" : "inboundType",
  "supplierCode" : "supplierCode",
  "inboundAmount" : 5,
  "inboundUser" : "inboundUser",
  "child" : [ {
    "officeSpecification" : "officeSpecification",
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "officeUnits" : "officeUnits",
    "officeBrand" : "officeBrand",
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "officeSpecification" : "officeSpecification",
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "officeUnits" : "officeUnits",
    "officeBrand" : "officeBrand",
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ]
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/warehouse/inbound/items/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">inBoundByItemsUsingPOST_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${inBoundByItemsUsingPOST_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单生成到入库" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "inboundTime" : "inboundTime",
  "inboundCode" : "inboundCode",
  "lastoperationUser" : "lastoperationUser",
  "description" : "description",
  "inboundStatus" : "inboundStatus",
  "updateTime" : "updateTime",
  "supplierCode" : "supplierCode",
  "inboundUser" : "inboundUser",
  "inboundPrice" : 9.301444243932576,
  "commitTime" : "commitTime",
  "createdTime" : "createdTime",
  "depotCode" : "depotCode",
  "id" : 2,
  "inboundType" : "inboundType",
  "inboundAmount" : 7,
  "isDel" : true,
  "child" : [ {
    "officeSpecification" : "officeSpecification",
    "itemYear" : "itemYear",
    "amount" : 0,
    "totalPrice" : 5.962133916683182,
    "updateTime" : "updateTime",
    "warehouseinId" : 5,
    "officeBrand" : "officeBrand",
    "parent1" : "parent1",
    "itemName" : "itemName",
    "price" : 1.4658129805029452,
    "createdTime" : "createdTime",
    "id" : 6,
    "officeUnits" : "officeUnits",
    "isDel" : true,
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "officeSpecification" : "officeSpecification",
    "itemYear" : "itemYear",
    "amount" : 0,
    "totalPrice" : 5.962133916683182,
    "updateTime" : "updateTime",
    "warehouseinId" : 5,
    "officeBrand" : "officeBrand",
    "parent1" : "parent1",
    "itemName" : "itemName",
    "price" : 1.4658129805029452,
    "createdTime" : "createdTime",
    "id" : 6,
    "officeUnits" : "officeUnits",
    "isDel" : true,
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ]
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/warehouse/inbound/purchase/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">purchaseAddUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${purchaseAddUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="出库管理-图书出库" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "pickUser" : "pickUser",
  "consigneeProvince" : "consigneeProvince",
  "consigneeTel" : "consigneeTel",
  "outboundCampus" : "outboundCampus",
  "consigneeDistrict" : "consigneeDistrict",
  "outboundDepot" : "outboundDepot",
  "pickTel" : "pickTel",
  "outboundType" : "outboundType",
  "receivingType" : 0,
  "consigneeUser" : "consigneeUser",
  "consigneeDescription" : "consigneeDescription",
  "child" : [ {
    "createdTime" : "createdTime",
    "updateTime" : "updateTime"
  }, {
    "createdTime" : "createdTime",
    "updateTime" : "updateTime"
  } ],
  "consigneeAddress" : "consigneeAddress",
  "consigneeCity" : "consigneeCity"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/warehouse/outbound/books/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">inBoundByBooksUsingPOST_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${inBoundByBooksUsingPOST_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="出库管理-办公物品出库" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "pickUser" : "pickUser",
  "consigneeProvince" : "consigneeProvince",
  "consigneeTel" : "consigneeTel",
  "outboundCode" : "outboundCode",
  "outboundCampus" : "outboundCampus",
  "consigneeDistrict" : "consigneeDistrict",
  "outboundDepot" : "outboundDepot",
  "pickTel" : "pickTel",
  "outboundType" : "outboundType",
  "receivingType" : 5,
  "consigneeUser" : "consigneeUser",
  "consigneeDescription" : "consigneeDescription",
  "child" : [ {
    "officeSpecification" : "officeSpecification",
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "officeUnits" : "officeUnits",
    "officeBrand" : "officeBrand",
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "officeSpecification" : "officeSpecification",
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "officeUnits" : "officeUnits",
    "officeBrand" : "officeBrand",
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ],
  "consigneeAddress" : "consigneeAddress",
  "consigneeCity" : "consigneeCity"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/warehouse/outbound/items/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">inBoundByItemsUsingPOST_2</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${inBoundByItemsUsingPOST_2.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
		  </hashTree>
		  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="进销存-基础数据管理" enabled="true">
            <stringProp name="TestPlan.comments"></stringProp>
		  </GenericController>
		  <hashTree>
		     <!--遍历请求接口-->
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="代理商信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/agent/delete/${deleteAgentBYKeyUsingDELETE_7.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deleteAgentBYKeyUsingDELETE_7</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deleteAgentBYKeyUsingDELETE_7.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="代理商信息分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="agenUser" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">agenUser</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.agenUser}</stringProp>
						 </elementProp>
						<elementProp name="agentName" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">agentName</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.agentName}</stringProp>
						 </elementProp>
						<elementProp name="agentNumber" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">agentNumber</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.agentNumber}</stringProp>
						 </elementProp>
						<elementProp name="agentTel" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">agentTel</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.agentTel}</stringProp>
						 </elementProp>
						<elementProp name="agentType" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">agentType</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.agentType}</stringProp>
						 </elementProp>
						<elementProp name="agentUser" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">agentUser</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.agentUser}</stringProp>
						 </elementProp>
						<elementProp name="dockingPeople" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">dockingPeople</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.dockingPeople}</stringProp>
						 </elementProp>
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.pageSize}</stringProp>
						 </elementProp>
						<elementProp name="status" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">status</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET.status}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/agent/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="代理商信息录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "agentStartTime" : "2000-01-23T04:56:07.000+00:00",
  "dockingUserName" : "dockingUserName",
  "agentAddress" : "agentAddress",
  "agentId" : "agentId",
  "createUserId" : "createUserId",
  "agentType" : "agentType",
  "updateUserId" : "updateUserId",
  "agentCode" : "agentCode",
  "agentTel" : "agentTel",
  "updateUserName" : "updateUserName",
  "dockingUserId" : "dockingUserId",
  "agentName" : "agentName",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "agentUser" : "agentUser",
  "agentStatus" : true,
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "isDel" : true,
  "taxpayerId" : "taxpayerId"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/agent/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">saveAgentUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${saveAgentUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="代理商信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "agentStartTime" : "2000-01-23T04:56:07.000+00:00",
  "dockingUserName" : "dockingUserName",
  "agentAddress" : "agentAddress",
  "agentId" : "agentId",
  "createUserId" : "createUserId",
  "agentType" : "agentType",
  "updateUserId" : "updateUserId",
  "agentCode" : "agentCode",
  "agentTel" : "agentTel",
  "updateUserName" : "updateUserName",
  "dockingUserId" : "dockingUserId",
  "agentName" : "agentName",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "agentUser" : "agentUser",
  "agentStatus" : true,
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "isDel" : true,
  "taxpayerId" : "taxpayerId"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/agent/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updateAgentByKeyUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updateAgentByKeyUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快递公司信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/express/delete/${deleteExpressBYKeyUsingDELETE_7.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deleteExpressBYKeyUsingDELETE_7</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deleteExpressBYKeyUsingDELETE_7.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快递公司信息分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_1.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_1.pageSize}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/express/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快递公司信息录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "createUserId" : "createUserId",
  "expressOutletsName" : "expressOutletsName",
  "updateUserId" : "updateUserId",
  "expressMerchantKey" : true,
  "deliveryman" : "deliveryman",
  "updateUserName" : "updateUserName",
  "expressCompanyCode" : "expressCompanyCode",
  "createUserName" : "createUserName",
  "expressDeptId" : "expressDeptId",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "expressAddress" : "expressAddress",
  "expressCompanyName" : "expressCompanyName",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "expressDeptName" : "expressDeptName",
  "expressMerchantId" : "expressMerchantId",
  "deliverymanTel" : "deliverymanTel",
  "expressMonthlStatement" : "expressMonthlStatement",
  "expressMerchantStatus" : true,
  "expressOutletsCode" : "expressOutletsCode",
  "isDel" : true,
  "expressId" : "expressId"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/express/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">saveExpressUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${saveExpressUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快递公司信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "createUserId" : "createUserId",
  "expressOutletsName" : "expressOutletsName",
  "updateUserId" : "updateUserId",
  "expressMerchantKey" : true,
  "deliveryman" : "deliveryman",
  "updateUserName" : "updateUserName",
  "expressCompanyCode" : "expressCompanyCode",
  "createUserName" : "createUserName",
  "expressDeptId" : "expressDeptId",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "expressAddress" : "expressAddress",
  "expressCompanyName" : "expressCompanyName",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "expressDeptName" : "expressDeptName",
  "expressMerchantId" : "expressMerchantId",
  "deliverymanTel" : "deliverymanTel",
  "expressMonthlStatement" : "expressMonthlStatement",
  "expressMerchantStatus" : true,
  "expressOutletsCode" : "expressOutletsCode",
  "isDel" : true,
  "expressId" : "expressId"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/express/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updateExpressByKeyUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updateExpressByKeyUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="物品库信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/items/delete/${deleteAgentBYKeyUsingDELETE_15.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deleteAgentBYKeyUsingDELETE_15</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deleteAgentBYKeyUsingDELETE_15.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据供应商筛选联动数据" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="level" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">level</stringProp>
							<stringProp name="Argument.value">${findAoglinkageUsingGET.level}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/items/linkage/${findAoglinkageUsingGET.value}</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findAoglinkageUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findAoglinkageUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="物品库信息分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="itemsBrand" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">itemsBrand</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.itemsBrand}</stringProp>
						 </elementProp>
						<elementProp name="itemsName" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">itemsName</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.itemsName}</stringProp>
						 </elementProp>
						<elementProp name="itemsParent1" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">itemsParent1</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.itemsParent1}</stringProp>
						 </elementProp>
						<elementProp name="itemsParent2" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">itemsParent2</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.itemsParent2}</stringProp>
						 </elementProp>
						<elementProp name="itemsParent3" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">itemsParent3</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.itemsParent3}</stringProp>
						 </elementProp>
						<elementProp name="itemsStatus" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">itemsStatus</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.itemsStatus}</stringProp>
						 </elementProp>
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.pageSize}</stringProp>
						 </elementProp>
						<elementProp name="supplierId" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierId</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_2.supplierId}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/items/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_2</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_2.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="物品库信息录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "itemsStatus" : true,
  "createUserId" : "createUserId",
  "itemsName" : "itemsName",
  "supplierId" : "supplierId",
  "updateUserId" : "updateUserId",
  "itemsOneThing" : true,
  "updateUserName" : "updateUserName",
  "itemsUnit" : "itemsUnit",
  "itemsCode" : "itemsCode",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "itemsPrice" : 0.8008281904610115,
  "itemsSpecification" : "itemsSpecification",
  "itemsBrand" : "itemsBrand",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "itemsParent1" : "itemsParent1",
  "itemsId" : "itemsId",
  "itemsParent2" : "itemsParent2",
  "itemsParent3" : "itemsParent3",
  "isDel" : true
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/items/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">saveAgentUsingPOST_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${saveAgentUsingPOST_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="物品库信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "itemsStatus" : true,
  "createUserId" : "createUserId",
  "itemsName" : "itemsName",
  "supplierId" : "supplierId",
  "updateUserId" : "updateUserId",
  "itemsOneThing" : true,
  "updateUserName" : "updateUserName",
  "itemsUnit" : "itemsUnit",
  "itemsCode" : "itemsCode",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "itemsPrice" : 0.8008281904610115,
  "itemsSpecification" : "itemsSpecification",
  "itemsBrand" : "itemsBrand",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "itemsParent1" : "itemsParent1",
  "itemsId" : "itemsId",
  "itemsParent2" : "itemsParent2",
  "itemsParent3" : "itemsParent3",
  "isDel" : true
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/items/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updateAgentByKeyUsingPOST_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updateAgentByKeyUsingPOST_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电商店铺信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/store/delete/${deleteAgentBYKeyUsingDELETE_23.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deleteAgentBYKeyUsingDELETE_23</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deleteAgentBYKeyUsingDELETE_23.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电商店铺分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_7.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_7.pageSize}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/store/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_7</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_7.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电商店铺信息录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "createUserId" : "createUserId",
  "storeTel" : "storeTel",
  "updateUserId" : "updateUserId",
  "updateUserName" : "updateUserName",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "storeId" : "storeId",
  "storeStartTime" : "2000-01-23T04:56:07.000+00:00",
  "storeStatus" : true,
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "storeName" : "storeName",
  "storeUserName" : "storeUserName",
  "storeUserId" : "storeUserId",
  "isDel" : true,
  "storeCode" : "storeCode"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/store/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">saveAgentUsingPOST_2</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${saveAgentUsingPOST_2.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电商店铺信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "createUserId" : "createUserId",
  "storeTel" : "storeTel",
  "updateUserId" : "updateUserId",
  "updateUserName" : "updateUserName",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "storeId" : "storeId",
  "storeStartTime" : "2000-01-23T04:56:07.000+00:00",
  "storeStatus" : true,
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "storeName" : "storeName",
  "storeUserName" : "storeUserName",
  "storeUserId" : "storeUserId",
  "isDel" : true,
  "storeCode" : "storeCode"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/store/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updateAgentByKeyUsingPOST_2</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updateAgentByKeyUsingPOST_2.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供应商信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/supplier/delete/${deleteAgentBYKeyUsingDELETE_31.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deleteAgentBYKeyUsingDELETE_31</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deleteAgentBYKeyUsingDELETE_31.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供应商列表展示API" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="supplierCode" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierCode</stringProp>
							<stringProp name="Argument.value">${selectDetailUsingGET.supplierCode}</stringProp>
						 </elementProp>
						<elementProp name="supplierName" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierName</stringProp>
							<stringProp name="Argument.value">${selectDetailUsingGET.supplierName}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/supplier/detail</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">selectDetailUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${selectDetailUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供应商分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="dockingUserId" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">dockingUserId</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.dockingUserId}</stringProp>
						 </elementProp>
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.pageSize}</stringProp>
						 </elementProp>
						<elementProp name="supplierCode" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierCode</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.supplierCode}</stringProp>
						 </elementProp>
						<elementProp name="supplierName" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierName</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.supplierName}</stringProp>
						 </elementProp>
						<elementProp name="supplierStatus" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierStatus</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.supplierStatus}</stringProp>
						 </elementProp>
						<elementProp name="supplierTel" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierTel</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.supplierTel}</stringProp>
						 </elementProp>
						<elementProp name="supplierType" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierType</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.supplierType}</stringProp>
						 </elementProp>
						<elementProp name="supplierUsername" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">supplierUsername</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_8.supplierUsername}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/supplier/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_8</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_8.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供应商信息录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "dockingUserName" : "dockingUserName",
  "supplierName" : "supplierName",
  "createUserId" : "createUserId",
  "supplierId" : "supplierId",
  "updateUserId" : "updateUserId",
  "updateUserName" : "updateUserName",
  "dockingUserId" : "dockingUserId",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "supplierCode" : "supplierCode",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "supplierStatus" : true,
  "supplierStartTime" : "2000-01-23T04:56:07.000+00:00",
  "supplierTel" : "supplierTel",
  "supplierType" : "supplierType",
  "isDel" : true,
  "supplierUsername" : "supplierUsername",
  "taxpayerId" : "taxpayerId"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/supplier/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">saveAgentUsingPOST_3</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${saveAgentUsingPOST_3.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="供应商信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "dockingUserName" : "dockingUserName",
  "supplierName" : "supplierName",
  "createUserId" : "createUserId",
  "supplierId" : "supplierId",
  "updateUserId" : "updateUserId",
  "updateUserName" : "updateUserName",
  "dockingUserId" : "dockingUserId",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "supplierCode" : "supplierCode",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "supplierStatus" : true,
  "supplierStartTime" : "2000-01-23T04:56:07.000+00:00",
  "supplierTel" : "supplierTel",
  "supplierType" : "supplierType",
  "isDel" : true,
  "supplierUsername" : "supplierUsername",
  "taxpayerId" : "taxpayerId"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/supplier/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updateAgentByKeyUsingPOST_3</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updateAgentByKeyUsingPOST_3.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/warehouse/delete/${deleteDepotBYKeyUsingDELETE_7.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deleteDepotBYKeyUsingDELETE_7</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deleteDepotBYKeyUsingDELETE_7.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库信息分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_9.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_9.pageSize}</stringProp>
						 </elementProp>
						<elementProp name="warehouseDeptId" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">warehouseDeptId</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_9.warehouseDeptId}</stringProp>
						 </elementProp>
						<elementProp name="warehouseName" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">warehouseName</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_9.warehouseName}</stringProp>
						 </elementProp>
						<elementProp name="warehouseStatusus" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">warehouseStatusus</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_9.warehouseStatusus}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/warehouse/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_9</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_9.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库信息录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "warehouseAddress" : "warehouseAddress",
  "warehouseDescription" : "warehouseDescription",
  "createUserId" : "createUserId",
  "warehouseUserId" : "warehouseUserId",
  "updateUserId" : "updateUserId",
  "updateUserName" : "updateUserName",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "warehouseDeptId" : "warehouseDeptId",
  "warehouseName" : "warehouseName",
  "warehouseCode" : "warehouseCode",
  "warehouseDeptName" : "warehouseDeptName",
  "warehouseUserName" : "warehouseUserName",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "warehouseId" : "warehouseId",
  "warehouseStatus" : true,
  "warehouseType" : "warehouseType",
  "isDel" : true
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/warehouse/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">saveAgentUsingPOST_4</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${saveAgentUsingPOST_4.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "warehouseAddress" : "warehouseAddress",
  "warehouseDescription" : "warehouseDescription",
  "createUserId" : "createUserId",
  "warehouseUserId" : "warehouseUserId",
  "updateUserId" : "updateUserId",
  "updateUserName" : "updateUserName",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "warehouseDeptId" : "warehouseDeptId",
  "warehouseName" : "warehouseName",
  "warehouseCode" : "warehouseCode",
  "warehouseDeptName" : "warehouseDeptName",
  "warehouseUserName" : "warehouseUserName",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "warehouseId" : "warehouseId",
  "warehouseStatus" : true,
  "warehouseType" : "warehouseType",
  "isDel" : true
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/warehouse/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updateAgentByKeyUsingPOST_4</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updateAgentByKeyUsingPOST_4.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电子面单信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/waybill/delete/${deleteExpressBYKeyUsingDELETE_15.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deleteExpressBYKeyUsingDELETE_15</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deleteExpressBYKeyUsingDELETE_15.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电子面单信息分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_5.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_5.pageSize}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/waybill/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_5</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_5.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电子面单信息录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "createUserId" : "createUserId",
  "updateUserId" : "updateUserId",
  "expressWaybillStatus" : true,
  "updateUserName" : "updateUserName",
  "expressCompanyCode" : "expressCompanyCode",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "expressWaybillSize" : "expressWaybillSize",
  "expressWaybillCode" : "expressWaybillCode",
  "expressWaybillId" : "expressWaybillId",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "expressWaybillName" : "expressWaybillName",
  "isDel" : true
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/waybill/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">saveExpressUsingPOST_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${saveExpressUsingPOST_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电子面单信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "createUserId" : "createUserId",
  "updateUserId" : "updateUserId",
  "expressWaybillStatus" : true,
  "updateUserName" : "updateUserName",
  "expressCompanyCode" : "expressCompanyCode",
  "createUserName" : "createUserName",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "expressWaybillSize" : "expressWaybillSize",
  "expressWaybillCode" : "expressWaybillCode",
  "expressWaybillId" : "expressWaybillId",
  "createTime" : "2000-01-23T04:56:07.000+00:00",
  "expressWaybillName" : "expressWaybillName",
  "isDel" : true
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/basicdata/waybill/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updateExpressByKeyUsingPOST_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updateExpressByKeyUsingPOST_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
		  </hashTree>
		  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="进销存-采购管理" enabled="true">
            <stringProp name="TestPlan.comments"></stringProp>
		  </GenericController>
		  <hashTree>
		     <!--遍历请求接口-->
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货单详情页" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/aog/detail/${findAogdetailUsingGET.id}</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findAogdetailUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findAogdetailUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货单分页展示" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="aogNumber" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">aogNumber</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_3.aogNumber}</stringProp>
						 </elementProp>
						<elementProp name="aogTime" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">aogTime</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_3.aogTime}</stringProp>
						 </elementProp>
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_3.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_3.pageSize}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/aog/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_3</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_3.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="自动生成单号" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/aog/order</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">ordersUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${ordersUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货单录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "acceptorUser" : "acceptorUser",
  "supplierNumber" : "supplierNumber",
  "description" : "description",
  "aogType" : true,
  "updateTime" : "updateTime",
  "aogDetail" : [ {
    "amount" : 0,
    "totalPrice" : 2.3021358869347655,
    "discount" : 1,
    "updateTime" : "updateTime",
    "parent1" : "parent1",
    "itemName" : "itemName",
    "createdTime" : "createdTime",
    "id" : 5,
    "isDel" : true,
    "aogId" : 6,
    "parent2" : "parent2",
    "pricing" : 5.637376656633329,
    "parent3" : "parent3"
  }, {
    "amount" : 0,
    "totalPrice" : 2.3021358869347655,
    "discount" : 1,
    "updateTime" : "updateTime",
    "parent1" : "parent1",
    "itemName" : "itemName",
    "createdTime" : "createdTime",
    "id" : 5,
    "isDel" : true,
    "aogId" : 6,
    "parent2" : "parent2",
    "pricing" : 5.637376656633329,
    "parent3" : "parent3"
  } ],
  "aogStatus" : "aogStatus",
  "depotNumber" : "depotNumber",
  "aogNumber" : "aogNumber",
  "file" : "file",
  "isAog" : true,
  "createdTime" : "createdTime",
  "id" : 7,
  "isDel" : true,
  "aogTime" : "2000-01-23T04:56:07.000+00:00"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/aog/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">addUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${addUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="关联到货单" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "balance" : 0,
  "id" : 6,
  "jxcCorrelationAogVos" : {
    "amount" : 1,
    "itemName" : "itemName",
    "id" : 5,
    "aogId" : "aogId"
  }
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/correlation</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">correlationByKeyUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${correlationByKeyUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单关联到货单详情" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/correlation/${correlationUsingGET.itemName}</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">correlationUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${correlationUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单信息删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/delete/detail/${deletePurDetailBYKeyUsingDELETE_7.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deletePurDetailBYKeyUsingDELETE_7</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deletePurDetailBYKeyUsingDELETE_7.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/delete/orders/${deletePurOrdersBYKeyUsingDELETE_7.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deletePurOrdersBYKeyUsingDELETE_7</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deletePurOrdersBYKeyUsingDELETE_7.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单详情页" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/detail/${findPagedetailUsingGET.id}</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPagedetailUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPagedetailUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单分页查询" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="applicationTime" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">applicationTime</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.applicationTime}</stringProp>
						 </elementProp>
						<elementProp name="buyerTel" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">buyerTel</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.buyerTel}</stringProp>
						 </elementProp>
						<elementProp name="buyerUser" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">buyerUser</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.buyerUser}</stringProp>
						 </elementProp>
						<elementProp name="consigneeAddress" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">consigneeAddress</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.consigneeAddress}</stringProp>
						 </elementProp>
						<elementProp name="itemName" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">itemName</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.itemName}</stringProp>
						 </elementProp>
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.pageSize}</stringProp>
						 </elementProp>
						<elementProp name="parent1" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">parent1</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.parent1}</stringProp>
						 </elementProp>
						<elementProp name="parent2" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">parent2</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.parent2}</stringProp>
						 </elementProp>
						<elementProp name="parent3" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">parent3</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.parent3}</stringProp>
						 </elementProp>
						<elementProp name="purchaseCode" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">purchaseCode</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.purchaseCode}</stringProp>
						 </elementProp>
						<elementProp name="purchaseStatus" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">purchaseStatus</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.purchaseStatus}</stringProp>
						 </elementProp>
						<elementProp name="purchaseType" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">purchaseType</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.purchaseType}</stringProp>
						 </elementProp>
						<elementProp name="suppliercode" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">suppliercode</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_4.suppliercode}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_4</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_4.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "stationCode" : "stationCode",
  "purchaseCode" : "purchaseCode",
  "buyerTel" : "buyerTel",
  "city" : "city",
  "branch" : "branch",
  "purchaseType" : "purchaseType",
  "payUppercase" : "payUppercase",
  "file" : "file",
  "province" : "province",
  "consigneeUser" : "consigneeUser",
  "createdTime" : "createdTime",
  "suppliercode" : "suppliercode",
  "id" : 0,
  "consigneeDescription" : "consigneeDescription",
  "consigneeAddress" : "consigneeAddress",
  "consigneeTel" : "consigneeTel",
  "buyerUser" : "buyerUser",
  "applicationtime" : "applicationtime",
  "updateTime" : "updateTime",
  "payDescription" : "payDescription",
  "payLowercase" : 1.4658129805029452,
  "purOrders" : [ {
    "parent1" : "parent1",
    "amount" : 5,
    "itemName" : "itemName",
    "totalPrice" : 9.301444243932576,
    "price" : 2.3021358869347655,
    "createdTime" : "createdTime",
    "updateTime" : "updateTime",
    "id" : 5,
    "isDel" : true,
    "purCode" : 7,
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "parent1" : "parent1",
    "amount" : 5,
    "itemName" : "itemName",
    "totalPrice" : 9.301444243932576,
    "price" : 2.3021358869347655,
    "createdTime" : "createdTime",
    "updateTime" : "updateTime",
    "id" : 5,
    "isDel" : true,
    "purCode" : 7,
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ],
  "district" : "district",
  "purchaseDescription" : "purchaseDescription",
  "purchaseStatus" : "purchaseStatus",
  "isDel" : 6,
  "deptCode" : "deptCode"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">addUsingPOST_1</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${addUsingPOST_1.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购单信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "stationCode" : "stationCode",
  "purchaseCode" : "purchaseCode",
  "buyerTel" : "buyerTel",
  "city" : "city",
  "branch" : "branch",
  "purchaseType" : "purchaseType",
  "payUppercase" : "payUppercase",
  "file" : "file",
  "province" : "province",
  "consigneeUser" : "consigneeUser",
  "createdTime" : "createdTime",
  "suppliercode" : "suppliercode",
  "id" : 0,
  "consigneeDescription" : "consigneeDescription",
  "consigneeAddress" : "consigneeAddress",
  "consigneeTel" : "consigneeTel",
  "buyerUser" : "buyerUser",
  "applicationtime" : "applicationtime",
  "updateTime" : "updateTime",
  "payDescription" : "payDescription",
  "payLowercase" : 1.4658129805029452,
  "purOrders" : [ {
    "parent1" : "parent1",
    "amount" : 5,
    "itemName" : "itemName",
    "totalPrice" : 9.301444243932576,
    "price" : 2.3021358869347655,
    "createdTime" : "createdTime",
    "updateTime" : "updateTime",
    "id" : 5,
    "isDel" : true,
    "purCode" : 7,
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "parent1" : "parent1",
    "amount" : 5,
    "itemName" : "itemName",
    "totalPrice" : 9.301444243932576,
    "price" : 2.3021358869347655,
    "createdTime" : "createdTime",
    "updateTime" : "updateTime",
    "id" : 5,
    "isDel" : true,
    "purCode" : 7,
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ],
  "district" : "district",
  "purchaseDescription" : "purchaseDescription",
  "purchaseStatus" : "purchaseStatus",
  "isDel" : 6,
  "deptCode" : "deptCode"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/order/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updatePurByKeyUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updatePurByKeyUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购计划删除" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/plan/delete/plan/${deletePurOrdersBYKeyUsingDELETE_15.id}</stringProp>
				  <stringProp name="HTTPSampler.method">DELETE</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">deletePurOrdersBYKeyUsingDELETE_15</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${deletePurOrdersBYKeyUsingDELETE_15.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购计划分页查询" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
						<elementProp name="pageNum" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageNum</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_6.pageNum}</stringProp>
						 </elementProp>
						<elementProp name="pageSize" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">pageSize</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_6.pageSize}</stringProp>
						 </elementProp>
						<elementProp name="planCode" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">planCode</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_6.planCode}</stringProp>
						 </elementProp>
						<elementProp name="planYear" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">planYear</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_6.planYear}</stringProp>
						 </elementProp>
						<elementProp name="purType" elementType="HTTPArgument">
							<boolProp name="HTTPArgument.always_encode">false</boolProp>
							<stringProp name="Argument.metadata">=</stringProp>
							<boolProp name="HTTPArgument.use_equals">true</boolProp>
							<stringProp name="Argument.name">purType</stringProp>
							<stringProp name="Argument.value">${findPageUsingGET_6.purType}</stringProp>
						 </elementProp>
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/plan/list</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">findPageUsingGET_6</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${findPageUsingGET_6.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购计划录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "stationCode" : "stationCode",
  "planYear" : "planYear",
  "purType" : "purType",
  "branchCode" : "branchCode",
  "payDescription" : "payDescription",
  "payUppercase" : "payUppercase",
  "file" : "file",
  "payLowercase" : 5.962133916683182,
  "planUser" : "planUser",
  "planDescription" : "planDescription",
  "planTel" : "planTel",
  "deptCode" : "deptCode",
  "child" : [ {
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 1.4658129805029452,
    "price" : 6.027456183070403,
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ]
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/plan/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">inBoundByItemsUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${inBoundByItemsUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采购计划信息修改" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "stationCode" : "stationCode",
  "planYear" : "planYear",
  "purType" : "purType",
  "planStatus" : "planStatus",
  "updateTime" : "2000-01-23T04:56:07.000+00:00",
  "planCode" : "planCode",
  "userCode" : "userCode",
  "branchCode" : "branchCode",
  "payDescription" : "payDescription",
  "payUppercase" : "payUppercase",
  "file" : "file",
  "payLowercase" : 7.061401241503109,
  "planUser" : "planUser",
  "createdTime" : "2000-01-23T04:56:07.000+00:00",
  "planDescription" : "planDescription",
  "id" : 2,
  "isDel" : true,
  "planTel" : "planTel",
  "deptCode" : "deptCode",
  "child" : [ {
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 5.637376656633329,
    "price" : 5.962133916683182,
    "createdTime" : "2000-01-23T04:56:07.000+00:00",
    "planId" : 1,
    "updateTime" : "2000-01-23T04:56:07.000+00:00",
    "id" : 6,
    "isDel" : true,
    "parent2" : "parent2",
    "parent3" : "parent3"
  }, {
    "parent1" : "parent1",
    "amount" : 0,
    "itemName" : "itemName",
    "totalPrice" : 5.637376656633329,
    "price" : 5.962133916683182,
    "createdTime" : "2000-01-23T04:56:07.000+00:00",
    "planId" : 1,
    "updateTime" : "2000-01-23T04:56:07.000+00:00",
    "id" : 6,
    "isDel" : true,
    "parent2" : "parent2",
    "parent3" : "parent3"
  } ]
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/plan/update</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">updatePurPlanByKeyUsingPOST</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${updatePurPlanByKeyUsingPOST.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="自动生成退款单号" enabled="true">
				  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
					 <collectionProp name="Arguments.arguments">
					</collectionProp>
				  </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/refund/order</stringProp>
				  <stringProp name="HTTPSampler.method">GET</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">generatedUsingGET</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${generatedUsingGET.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
			<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="退款单录入" enabled="true">
			      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{
  "itemName" : "itemName",
  "purdetailId" : 0,
  "description" : "description",
  "supplierCode" : "supplierCode",
  "refundPrice" : 1.4658129805029452,
  "refundAmount" : 6,
  "refundNumber" : "refundNumber"
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
				  <stringProp name="HTTPSampler.domain"></stringProp>
				  <stringProp name="HTTPSampler.port"></stringProp>
				  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
				  <stringProp name="HTTPSampler.response_timeout"></stringProp>
				  <stringProp name="HTTPSampler.protocol"></stringProp>
				  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
				  <stringProp name="HTTPSampler.path">/jxc/purchase/refund/save</stringProp>
				  <stringProp name="HTTPSampler.method">POST</stringProp>
				  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
				  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
				  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
				  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
				  <stringProp name="HTTPSampler.implementation"></stringProp>
				  <boolProp name="HTTPSampler.monitor">false</boolProp>
				  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
				  <stringProp name="TestPlan.comments">addUsingPOST_2</stringProp>
			  </HTTPSamplerProxy>
			  <hashTree>
			     <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="接口header管理器名称" enabled="true">
                     <collectionProp name="HeaderManager.headers">
                       <elementProp name="" elementType="Header">
                         <stringProp name="Header.name">Authorization</stringProp>
                         <stringProp name="Header.value">${addUsingPOST_2.Authorization}</stringProp>
                       </elementProp>
                     </collectionProp>
                     <stringProp name="TestPlan.comments">接口header管理器描述</stringProp>
                 </HeaderManager>
                 <hashTree/>

			    <!--每个接口断言定义开始-->
				  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Response状态码断言" enabled="true">
                     <stringProp name="JSON_PATH">$.statusCode</stringProp>
                     <stringProp name="EXPECTED_VALUE">000000</stringProp>
                     <boolProp name="JSONVALIDATION">true</boolProp>
                     <boolProp name="EXPECT_NULL">false</boolProp>
                     <boolProp name="INVERT">false</boolProp>
                     <boolProp name="ISREGEX">true</boolProp>
                   </JSONPathAssertion>
				   <hashTree/>
				 <!--每个接口断言定义结束-->
			  </hashTree>
		  </hashTree>
	   </hashTree>
	   
	 <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
		<boolProp name="ResultCollector.error_logging">false</boolProp>
		 <objProp>
		   <name>saveConfig</name>
		   <value class="SampleSaveConfiguration">
			  <time>true</time>
			  <latency>true</latency>
			  <timestamp>true</timestamp>
			  <success>true</success>
			  <label>true</label>
			  <code>true</code>
			  <message>true</message>
			  <threadName>true</threadName>
			  <dataType>true</dataType>
			  <encoding>false</encoding>
			  <assertions>true</assertions>
			  <subresults>true</subresults>
			  <responseData>false</responseData>
			  <samplerData>false</samplerData>
			  <xml>false</xml>
			  <fieldNames>true</fieldNames>
			  <responseHeaders>false</responseHeaders>
			  <requestHeaders>false</requestHeaders>
			  <responseDataOnError>false</responseDataOnError>
			  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
			  <assertionsResultsToSave>0</assertionsResultsToSave>
			  <bytes>true</bytes>
			  <sentBytes>true</sentBytes>
			  <url>true</url>
			  <threadCounts>true</threadCounts>
			  <idleTime>true</idleTime>
			  <connectTime>true</connectTime>
			</value>
		  </objProp>
		  <stringProp name="filename"></stringProp>
	  </ResultCollector>
	  <hashTree/>
    </hashTree>
	</hashTree>
	<WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
  <!--测试计划结束-->
</jmeterTestPlan>
